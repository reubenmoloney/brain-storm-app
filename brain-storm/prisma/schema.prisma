datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

//profile table
model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String@db.Text
  email String @db.Text

  groups Group[]
  members Member[]
  topics Topic[]
}

//group table -- profileId links to the creator of the group
model Group {
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members Member[]
  topics Topic[]

  @@index([profileId])
}

//possible roles within groups
enum MemberRole {
  OWNER
  MODERATOR
  MEMBER
}

//Member table -- links to a profile and a group
model Member {
  id String @id @default(uuid())
  role MemberRole @default(MEMBER)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  groupId String
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([groupId])
}

//Topics table -- links to group its in and the profile that created it
model Topic {
  id String @id @default(uuid())
  name String

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  groupId String
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([groupId])
}

